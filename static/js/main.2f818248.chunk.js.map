{"version":3,"sources":["utils/api.js","utils/propTypes.js","components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["BASE_URL","request","firstRequest","secondRequest","fetch","then","response","json","result","data","todoPropTypes","PropTypes","shape","id","number","isRequired","name","string","email","phone","userId","title","completed","bool","TodoList","arrayOf","todos","onClick","className","map","todo","key","type","readOnly","value","CurrentUser","user","App","state","initialtodos","selectedUserId","selectedUser","filteredBy","filterPhrase","handleChanges","event","target","setState","setFilterMethod","method","stateName","initialStateField","condition","filter","item","toLowerCase","includes","resetUser","a","initialTodos","this","prevProps","prevState","setUser","placeholder","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f818248.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport function request(firstRequest, secondRequest = '') {\n  return (\n    fetch(`${BASE_URL}${firstRequest}${secondRequest}`)\n      .then(response => response.json())\n      .then(result => result.data)\n  );\n}\n","import PropTypes from 'prop-types';\n\nexport const userPropTyes = {\n  user: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport const todoPropTypes = {\n  id: PropTypes.number.isRequired,\n  userId: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n};\n\nexport const todoListPropTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape(todoPropTypes)).isRequired,\n};\n","import React from 'react';\nimport { todoListPropTypes } from '../../utils';\nimport './TodoList.scss';\n\nexport const TodoList = ({ todos, onClick }) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map((todo) => {\n          const { id, title, userId, completed } = todo;\n\n          return (\n            <li\n              key={id}\n              className={'TodoList__item'\n                + ` TodoList__item--${completed ? 'checked' : 'unchecked'}`\n              }\n            >\n              <label>\n                <input\n                  type=\"checkbox\"\n                  readOnly\n                />\n                <p>{title}</p>\n              </label>\n              <button\n                className=\"\n                  TodoList__user-button\n                  TodoList__user-button--selected\n                  button\n                \"\n                type=\"button\"\n                onClick={onClick}\n                name=\"selectedUserId\"\n                value={userId}\n              >\n                {`User ${userId}`}\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = todoListPropTypes;\n","import React from 'react';\nimport { userPropTyes } from '../../utils';\nimport './CurrentUser.scss';\n\nexport const CurrentUser = ({ user }) => {\n  const { id, name, email, phone } = user;\n\n  return (\n    <div className=\"CurrentUser\">\n      <h2 className=\"CurrentUser__title\">\n        <span>{`Selected user: ${id}`}</span>\n      </h2>\n      <h3 className=\"CurrentUser__name\">{name}</h3>\n      <p className=\"CurrentUser__email\">{email}</p>\n      <p className=\"CurrentUser__phone\">{phone}</p>\n    </div>\n  );\n};\n\nCurrentUser.propTypes = userPropTyes;\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { request } from './utils';\n\nclass App extends React.Component {\n  state = {\n    initialtodos: [],\n    todos: [],\n    selectedUserId: 0,\n    selectedUser: null,\n    filteredBy: '',\n    filterPhrase: '',\n  };\n\n  async componentDidMount() {\n    const todos = await request('/todos');\n    const initialTodos = todos.filter(todo => todo.title\n      && todo.userId\n      && typeof todo.completed !== 'object');\n\n    this.setState({\n      todos: initialTodos,\n      initialtodos: initialTodos,\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      initialtodos,\n      selectedUserId,\n      filteredBy,\n      filterPhrase,\n    } = this.state;\n\n    if (prevState.selectedUserId !== selectedUserId) {\n      this.setUser();\n    }\n\n    if (prevState.filteredBy !== filteredBy) {\n      this.setFilterMethod(\n        filteredBy, 'todos', initialtodos,\n      );\n    }\n\n    if (prevState.filterPhrase !== filterPhrase) {\n      this.setFilterMethod(\n        filterPhrase, 'todos', initialtodos, filterPhrase,\n      );\n    }\n  }\n\n  async setUser() {\n    const selectedUser = await\n    // eslint-disable-next-line react/no-access-state-in-setstate\n    request('/users', `/${this.state.selectedUserId}`);\n\n    this.setState({ selectedUser });\n  }\n\n  handleChanges = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  setFilterMethod = (method, stateName, initialStateField, condition = '') => {\n    if (method === this.state.filteredBy) {\n      switch (method) {\n        case 'completed':\n          this.setState({\n            [stateName]: initialStateField.filter(todo => todo.completed),\n          });\n          break;\n\n        case 'inProgress':\n          this.setState({\n            [stateName]: initialStateField.filter(todo => !todo.completed),\n          });\n          break;\n        case 'all':\n          this.setState({\n            [stateName]: initialStateField,\n          });\n          break;\n        default:\n      }\n    }\n\n    if (method === this.state.filterPhrase) {\n      this.setState({\n        [stateName]: initialStateField\n          .filter(\n            item => item.title.toLowerCase().includes(condition.toLowerCase()),\n          ),\n      });\n    }\n  }\n\n  resetUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const {\n      todos,\n      selectedUser,\n      selectedUserId,\n      filterPhrase,\n      filteredBy,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <input\n            type=\"text\"\n            placeholder=\"Find Ur todo...\"\n            name=\"filterPhrase\"\n            value={filterPhrase}\n            onChange={this.handleChanges}\n          />\n          <select\n            name=\"filteredBy\"\n            value={filteredBy}\n            onChange={this.handleChanges}\n          >\n\n            <option value=\"all\">\n              all\n            </option>\n            <option value=\"completed\">\n              completed\n            </option>\n            <option value=\"inProgress\">\n              in progress\n            </option>\n\n          </select>\n          <TodoList todos={todos} onClick={this.handleChanges} />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUser ? (\n              <CurrentUser userId={selectedUserId} user={selectedUser} />\n            ) : 'No user selected'}\n          </div>\n          {!!selectedUserId && (\n            <button\n              type=\"button\"\n              onClick={this.resetUser}\n              className=\"button\"\n            >\n              Clear\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}